version: '3.5'

services:

  invoke-lambda:
    image: sjawhar/aws-cli:1.16.160
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./:/${PWD}
      - ./sam-cache:${PWD}/sam-cache
    environment:
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID:-test}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY:-test}
      AWS_SESSION_TOKEN:
    user: root
    working_dir: ${PWD}
    entrypoint:
      - sam
      - local
      - invoke
      - --template
      - cloudformation.yml
      - --env-vars
      - env.local.json
      - --docker-volume-basedir
      - ${PWD}
      - --docker-network
      - enchanted-brain-concert
      - --region
      - us-west-2
      - --layer-cache-basedir
      - ${PWD}/sam-cache
      - --event
    command:
      - event.local.json

  db:
    image: amazon/dynamodb-local:1.11.477
    entrypoint:
      - java
      - -jar
      - DynamoDBLocal.jar
      - -inMemory
    command:
      - -sharedDb

  dbadmin:
    image: aaronshaf/dynamodb-admin
    environment:
      DYNAMO_ENDPOINT: http://db:8000
    ports:
      - 8001:8001

  dbsetup:
    image: lambci/lambda:nodejs10.x
    environment:
      NODE_PATH: /var/runtime/node_modules
      AWS_ACCESS_KEY_ID: test
      AWS_SECRET_ACCESS_KEY: test
    volumes:
      - ./_local-setup:/app
    working_dir: /app
    entrypoint: [node]
    command: [setup-db.js]
    restart: on-failure

networks:
  default:
    name: enchanted-brain-concert
