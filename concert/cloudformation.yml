AWSTemplateFormatVersion: 2010-09-09

Transform: AWS::Serverless-2016-10-31

Parameters:

  AdminUserPoolGroupName:
    Type: String

  CognitoUserPoolId:
    Type: String

  Environment:
    Type: String
    AllowedValues:
      - development
      - production
      - staging
      - testing

  EventName:
    Type: String


Mappings:

  ApiParams:
    ServerlessRestApi:
      StageName: Prod

  RouteKeys:
    ChoiceMade:
      Key: CHOICE_MADE
    Connect:
      Key: $connect
    Disconnect:
      Key: $disconnect
    EventStageChanged:
      Key: EVENT_STAGE_CHANGED


Globals:

  Function:
    Runtime: python3.7
    Handler: index.handler
    MemorySize: 128
    Timeout: 3
    AutoPublishAlias: live
    Environment:
      Variables:
        APP_ENVIRONMENT: !Ref Environment
        EVENT_NAME: !Ref EventName
        DYNAMODB_ENDPOINT: ''
        PYTHONPATH: /var/task/vendor:/opt/python:/var/runtime

Resources:

  Table:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Sub ${Environment}-enchanted-brain
      AttributeDefinitions:
        - AttributeName: record_type
          AttributeType: S
        - AttributeName: record_id
          AttributeType: S
      KeySchema:
        - AttributeName: record_type
          KeyType: HASH
        - AttributeName: record_id
          KeyType: range
      ProvisionedThroughput:
        ReadCapacityUnits: 1
        WriteCapacityUnits: 1
      SSESpecification:
        SSEEnabled: True
      StreamSpecification:
        StreamViewType: NEW_IMAGE

  Api:
    Type: AWS::ApiGatewayV2::Api
    Properties:
      Name: !Sub ${Environment}-enchanted-brain
      ProtocolType: WEBSOCKET
      RouteSelectionExpression: $request.body.event

  AuthorizerFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub ${Environment}-enchanted-brain-authorizer
      CodeUri: app/src/functions/authorizer
      Environment:
        Variables:
          COGNITO_USER_POOL_ID: !Ref CognitoUserPoolId
          COGNITO_ADMIN_GROUP_NAME: !Ref AdminUserPoolGroupName

  LambdaLayer:
    Type: AWS::Serverless::LayerVersion
    Properties:
      LayerName: !Sub ${Environment}-enchanted-brain
      ContentUri: app/src/layer
      CompatibleRuntimes:
        - python3.7

  CallbackSnsTopic:
    Type: AWS::SNS::Topic
    Properties:
      TopicName: !Sub ${Environment}-enchanted-brain-callback-global
      KmsMasterKeyId: alias/aws/sns

  CallbackKmsKey:
    Type: AWS::KMS::Key
    Properties:
      Description: !Sub ${Environment}-enchanted-brain-callback
      EnableKeyRotation: true
      KeyPolicy:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Action: kms:*
            Resource: '*'
            Principal:
              AWS: !Sub arn:aws:iam::${AWS::AccountId}:root
          - Effect: Allow
            Action:
              - kms:GenerateDataKey*
              - kms:Decrypt
            Resource: '*'
            Principal:
              Service: sns.amazonaws.com

  CallbackKmsKeyAlias:
    Type: AWS::KMS::Alias
    Properties:
      AliasName: !Sub alias/${Environment}/enchanted-brain/callback
      TargetKeyId: !Ref CallbackKmsKey

  CallbackFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub ${Environment}-enchanted-brain-callback
      CodeUri: app/src/functions/callback
      Environment:
        Variables:
          API_URL: !Sub
            - https://${Api}.execute-api.${AWS::Region}.amazonaws.com/${StageName}/@connections
            - StageName: !FindInMap [ApiParams,  ServerlessRestApi, StageName]
      Policies:
        - SQSPollerPolicy:
            QueueName: !Sub ${Environment}-enchanted-brain-callback-*
        - Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action: execute-api:ManageConnections
              Resource: !Sub arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${Api}/*
            - Effect: Allow
              Action: kms:Decrypt
              Resource: !GetAtt CallbackKmsKey.Arn

  CallbackFunctionPermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !Ref CallbackFunction.Alias
      Principal: sqs.amazonaws.com
      SourceArn: !Sub arn:aws:sqs:${AWS::Region}:${AWS::AccountId}:${Environment}-enchanted-brain-callback-*

  PublisherFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub ${Environment}-enchanted-brain-publisher
      CodeUri: app/src/functions/publisher
      Events:
        StreamEvent:
          Type: DynamoDB
          Properties:
            Stream: !GetAtt Table.StreamArn
            StartingPosition: TRIM_HORIZON
      Policies:
        - SNSPublishMessagePolicy:
            TopicName: !GetAtt CallbackSnsTopic.TopicName

  OnConnectFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub ${Environment}-enchanted-brain-on-connect
      CodeUri: app/src/functions/on_connect
      Layers:
        - !Ref LambdaLayer
      Timeout: 10
      Environment:
        Variables:
          CLOUDFORMATION_STACK_NAME_PREFIX: !Sub ${Environment}-enchanted-brain-callback
          DYNAMODB_TABLE_NAME: !Ref Table
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref Table
        - Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action: cloudformation:CreateStack
              Resource: !Sub arn:aws:cloudformation:${AWS::Region}:${AWS::AccountId}:stack/${Environment}-enchanted-brain-callback-*
            - Effect: Allow
              Action:
                - sqs:CreateQueue
                - sqs:GetQueueAttributes
                - sqs:SetQueueAttributes
              Resource: !Sub arn:aws:sqs:${AWS::Region}:${AWS::AccountId}:${Environment}-enchanted-brain-callback-*
            - Effect: Allow
              Action: sns:Subscribe
              Resource: !Ref CallbackSnsTopic
              Condition:
                ForAnyValue:StringEquals:
                  sns:Protocol: sqs
                ForAnyValue:StringLike:
                  sns:Endpoint: !Sub arn:aws:sqs:${AWS::Region}:${AWS::AccountId}:${Environment}-enchanted-brain-callback-*
            - Effect: Allow
              Action:
                - lambda:CreateEventSourceMapping
                - lambda:GetEventSourceMapping
              Resource: '*'
              Condition:
                ForAnyValue:ArnEquals:
                  lambda:FunctionArn: !Ref CallbackFunction.Alias

  OnConnectRoute:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: cloudformation.ws-route.yml
      Parameters:
        ApiId: !Ref Api
        CreateRouteResponse: 'yes'
        FunctionArn: !Ref OnConnectFunction.Alias
        RouteKey: !FindInMap [RouteKeys, Connect, Key]

  OnDisconnectFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub ${Environment}-enchanted-brain-on-disconnect
      CodeUri: app/src/functions/on_disconnect
      Layers:
        - !Ref LambdaLayer
      Timeout: 120
      Environment:
        Variables:
          DYNAMODB_TABLE_NAME: !Ref Table
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref Table
        - Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action: cloudformation:DeleteStack
              Resource: !Sub arn:aws:cloudformation:${AWS::Region}:${AWS::AccountId}:stack/${Environment}-enchanted-brain-callback-*
            - Effect: Allow
              Action:
                - sqs:DeleteQueue
                - sqs:GetQueueAttributes
                - sqs:SetQueueAttributes
              Resource: !Sub arn:aws:sqs:${AWS::Region}:${AWS::AccountId}:${Environment}-enchanted-brain-callback-*
            - Effect: Allow
              Action:
                - sns:Unsubscribe
                - lambda:GetEventSourceMapping
              Resource: '*'
            - Effect: Allow
              Action: sns:ListSubscriptionsByTopic
              Resource: !Ref CallbackSnsTopic
            - Effect: Allow
              Action:
                - lambda:DeleteEventSourceMapping
                - lambda:UpdateEventSourceMapping
              Resource: '*'
              Condition:
                ForAnyValue:ArnEquals:
                  lambda:FunctionArn: !Ref CallbackFunction.Alias

  OnDisconnectRoute:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: cloudformation.ws-route.yml
      Parameters:
        ApiId: !Ref Api
        FunctionArn: !Ref OnDisconnectFunction.Alias
        RouteKey: !FindInMap [RouteKeys, Disconnect, Key]

  ChoiceMadeSnsTopic:
    Type: AWS::SNS::Topic
    Properties:
      TopicName: !Sub ${Environment}-enchanted-brain-choice-made
      KmsMasterKeyId: alias/aws/sns

  OnChoiceMadeFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub ${Environment}-enchanted-brain-on-choice-made
      CodeUri: app/src/functions/on_choice_made
      Layers:
        - !Ref LambdaLayer
      Environment:
        Variables:
          CALLBACK_SNS_TOPIC_ARN: !Ref CallbackSnsTopic
          CHOICE_MADE_SNS_TOPIC_ARN: !Ref ChoiceMadeSnsTopic
      Policies:
        - SNSPublishMessagePolicy:
            TopicName: !GetAtt ChoiceMadeSnsTopic.TopicName

  OnChoiceMadeRoute:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: cloudformation.ws-route.yml
      Parameters:
        ApiId: !Ref Api
        CreateRouteResponse: 'yes'
        FunctionArn: !Ref OnChoiceMadeFunction.Alias
        RouteKey: !FindInMap [RouteKeys, ChoiceMade, Key]

  OnEventStageChangedFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub ${Environment}-enchanted-brain-on-event-stage-changed
      CodeUri: app/src/functions/on_event_stage_changed
      Layers:
        - !Ref LambdaLayer
      Environment:
        Variables:
          DYNAMODB_TABLE_NAME: !Ref Table
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref Table

  OnEventStageChangedRoute:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL: cloudformation.ws-route.yml
      Parameters:
        ApiId: !Ref Api
        FunctionArn: !Ref OnEventStageChangedFunction.Alias
        RouteKey: !FindInMap [RouteKeys, EventStageChanged, Key]

  ApiDeployment:
    Type: AWS::ApiGatewayV2::Deployment
    DependsOn:
      - OnChoiceMadeFunctionAliaslive
      - OnChoiceMadeRoute
      - OnConnectFunctionAliaslive
      - OnConnectRoute
      - OnDisconnectFunctionAliaslive
      - OnDisconnectRoute
      - OnEventStageChangedFunctionAliaslive
      - OnEventStageChangedRoute
    Properties:
      ApiId: !Ref Api

  ApiStage:
    Type: AWS::ApiGatewayV2::Stage
    Properties:
      ApiId: !Ref Api
      DeploymentId: !Ref ApiDeployment
      StageName: !FindInMap [ApiParams,  ServerlessRestApi, StageName]

  ChoiceWriterFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub ${Environment}-enchanted-brain-choice-writer
      CodeUri: app/src/functions/choice_writer
      Layers:
        - !Ref LambdaLayer
      Events:
        SnsEvent:
          Type: SNS
          Properties:
            Topic: !Ref ChoiceMadeSnsTopic
      Environment:
        Variables:
          DYNAMODB_TABLE_NAME: !Ref Table
      Policies:
        - DynamoDBCrudPolicy:
            TableName: !Ref Table


Outputs:

  TableName:
    Value: !Ref Table

  WebSocketURI:
    Value: !Sub wss://${Api}.execute-api.${AWS::Region}.amazonaws.com/${ApiStage}

  CallbackKmsKeyAlias:
    Value: !Ref CallbackKmsKeyAlias
    Export:
      Name: !Sub ${Environment}-enchanted-brain-callback-kms-key-alias-v1

  CallbackSnsTopicArn:
    Value: !Ref CallbackSnsTopic
    Export:
      Name: !Sub ${Environment}-enchanted-brain-callback-sns-topic-arn-v1

  CallbackFunctionArn:
    Value: !Ref CallbackFunction.Alias
    Export:
      Name: !Sub ${Environment}-enchanted-brain-callback-function-arn-v1
