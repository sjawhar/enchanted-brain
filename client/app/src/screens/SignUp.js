import React, { Component } from 'react';
import {
  MTURK_CHOICE_INTERVAL,
  MTURK_CHOICE_TIMEOUT,
  MTURK_CHOICE_TYPE,
  MTURK_SONG_ID,
  MTURK_API_URL,
  MTURK_APP_SECRET
} from 'react-native-dotenv';

import SignUp, { STEP_DEMOGRAPHICS } from '../components/SignUp';
import { store, actions } from '../state';

class SignUpScreen extends Component {
  handleSubmit = ({ demographics }) => {
    store.dispatch(actions.setDemographics(demographics));
    this.props.navigation.navigate({
      routeName: 'Instructions',
      params: {
        songId: MTURK_SONG_ID,
        choiceType: MTURK_CHOICE_TYPE,
        choiceInverted: Math.random() > 0.5,
        interval: MTURK_CHOICE_INTERVAL,
        timeout: MTURK_CHOICE_TIMEOUT,
        onEnd: this.onEnd,
      },
    });
  };

  onEnd = () => {
    
    const uuidv4 = require('uuid/v4');
    console.debug("UUID GENERATED: " + uuidv4());
    //show UUID to user // -- ? which screen to use?

    // fetch(MTURK_API_URL, {
    //   method: 'POST',
    //   headers: {
    //     Authentication: "Bearer " + MTURK_APP_SECRET, // -- correct?
    //     Accept: 'application/json',
    //     'Content-Type': 'application/json',
    //   },
    //   body: JSON.stringify({
    //     id: String,                   // UUID generated by client
    //     songId: String,
    //     choiceType: String,           // CHOICE_TYPE_EMOTION_ANGER | CHOICE_TYPE_EMOTION_HAPPINESS
    //     choiceInverted: Boolean,
    //     interval: Number,
    //     timeout: Number,
    //     demographics: { // --note - get this from store
    //       age: Number,
    //       colorPerception: Number,    // 0-3
    //       gender: String,             // MALE | FEMALE | OTHER
    //       countryOfBirth: String,     // Two-letter country code
    //       countryOfResidence: String,
    //     },
    //     choices: [
    //       {
    //         timestamp: String,
    //         choice: Number,
    //       },
    // ],
    //   }),
    // });


  }

  render() {
    return (
      <SignUp
        authState="signUp"
        finalStep={STEP_DEMOGRAPHICS}
        onFinalStep={this.handleSubmit}
        requireAcceptResearch
      />
    );
  }
}

export default SignUpScreen;
